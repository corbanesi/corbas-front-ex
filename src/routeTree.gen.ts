/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UnauthenticatedSignupRouteImport } from './routes/_unauthenticated/signup'
import { Route as UnauthenticatedLoginRouteImport } from './routes/_unauthenticated/login'
import { Route as AuthenticatedCorbasUsersIndexRouteImport } from './routes/_authenticated/corbas/users/index'
import { Route as AuthenticatedCorbasDashboardIndexRouteImport } from './routes/_authenticated/corbas/dashboard/index'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthenticatedSignupRoute = UnauthenticatedSignupRouteImport.update({
  id: '/_unauthenticated/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthenticatedLoginRoute = UnauthenticatedLoginRouteImport.update({
  id: '/_unauthenticated/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedCorbasUsersIndexRoute =
  AuthenticatedCorbasUsersIndexRouteImport.update({
    id: '/corbas/users/',
    path: '/corbas/users/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCorbasDashboardIndexRoute =
  AuthenticatedCorbasDashboardIndexRouteImport.update({
    id: '/corbas/dashboard/',
    path: '/corbas/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/signup': typeof UnauthenticatedSignupRoute
  '/corbas/dashboard': typeof AuthenticatedCorbasDashboardIndexRoute
  '/corbas/users': typeof AuthenticatedCorbasUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/signup': typeof UnauthenticatedSignupRoute
  '/corbas/dashboard': typeof AuthenticatedCorbasDashboardIndexRoute
  '/corbas/users': typeof AuthenticatedCorbasUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_unauthenticated/signup': typeof UnauthenticatedSignupRoute
  '/_authenticated/corbas/dashboard/': typeof AuthenticatedCorbasDashboardIndexRoute
  '/_authenticated/corbas/users/': typeof AuthenticatedCorbasUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/signup' | '/corbas/dashboard' | '/corbas/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/signup' | '/corbas/dashboard' | '/corbas/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unauthenticated/login'
    | '/_unauthenticated/signup'
    | '/_authenticated/corbas/dashboard/'
    | '/_authenticated/corbas/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
  UnauthenticatedSignupRoute: typeof UnauthenticatedSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unauthenticated/signup': {
      id: '/_unauthenticated/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnauthenticatedSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/corbas/users/': {
      id: '/_authenticated/corbas/users/'
      path: '/corbas/users'
      fullPath: '/corbas/users'
      preLoaderRoute: typeof AuthenticatedCorbasUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/corbas/dashboard/': {
      id: '/_authenticated/corbas/dashboard/'
      path: '/corbas/dashboard'
      fullPath: '/corbas/dashboard'
      preLoaderRoute: typeof AuthenticatedCorbasDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedCorbasDashboardIndexRoute: typeof AuthenticatedCorbasDashboardIndexRoute
  AuthenticatedCorbasUsersIndexRoute: typeof AuthenticatedCorbasUsersIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCorbasDashboardIndexRoute:
    AuthenticatedCorbasDashboardIndexRoute,
  AuthenticatedCorbasUsersIndexRoute: AuthenticatedCorbasUsersIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
  UnauthenticatedSignupRoute: UnauthenticatedSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
